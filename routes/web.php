<?php

/*
|--------------------------------------------------------------------------
| Web Routes
|--------------------------------------------------------------------------
|
| Here is where you can register web routes for your application. These
| routes are loaded by the RouteServiceProvider within a group which
| contains the "web" middleware group. Now create something great!
|
*/

/*** PAGES ***/
Route::get('/', 'PagesController@home');

Route::get('/about', 'PagesController@about');

Route::get('/contact', 'PagesController@contact');

Route::get('/extra', 'PagesController@extra');


/*** PROJECTS ***/
/*
    Possible route options. Behavours on how we might interact with a project(s) e.g.

    GET /projects (index)
    GET /projects/create (create)
    GET /projects/1 (show)
    POST /projects (store)
    GET /projects/edit (edit)
    PATCH /projects/1 (update)
    DELETE /projects/1 (destroy)

    Route::get('/projects', 'ProjectsController@index');

    Route::get('/projects/create', 'ProjectsController@create');

    Route::get('/projects/{project}', 'ProjectsController@show');

    Route::post('/projects', 'ProjectsController@store');

    Route::get('/projects/{project}/edit', 'ProjectsController@edit');

    Route::patch('/projects/{project}', 'ProjectsController@update');

    Route::delete('/projects/{project}', 'ProjectsController@destroy');

*/

/* Here's a shortcut for the above 7 interactions */
Route::resource('projects', 'ProjectsController');

/* *** IMPORTANT ***
This a test controller containing the 7 interactions automatically generated by the following artisan command:
php artisan make:controller PostsController -r

Adding the Model tag (i.e. "-m") to the above command will allow you to create an associated Model as follows:
php artisan make:controller PostsController -r -m Post

NOTE: It's not actually being used for any Views or with any Models.
*/
Route::resource('posts', 'PostsController');